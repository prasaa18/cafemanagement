name: cafe-management-cicd

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AWS_DEFAULT_REGION: us-east-1
  BACKEND_ECR_REPOSITORY: cafe-backend
  FRONTEND_ECR_REPOSITORY: cafe-frontend
  EKS_CLUSTER_NAME: vpro-ekss

jobs:
  Backend-Testing:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./cafemanagement

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'

      - name: Run Maven tests
        run: mvn test

      - name: Run SonarCloud scan
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=${{ secrets.BACKEND_SONAR_PROJECT_KEY }} \
            -Dsonar.organization=${{ secrets.SONAR_ORG }} \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  Frontend-Testing:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./Frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Run tests (non-blocking)
        run: npm run test:ci -- --watch=false --progress=false --browsers=ChromeHeadless || true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.FRONTEND_SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.sources=Frontend/src
            -Dsonar.exclusions=**/node_modules/**,**/*.spec.ts
            -Dsonar.tests=Frontend/src
            -Dsonar.test.inclusions=**/*.spec.ts
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  Build-And-Push-Images:
    needs: [Backend-Testing, Frontend-Testing]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      # Build & push backend
      - name: Build and push backend image
        working-directory: ./cafemanagement
        run: |
          docker-compose build
          docker tag cafemanagement-backend ${{ secrets.REGISTRY }}/cafe-backend:${{ github.run_number }}
          docker push ${{ secrets.REGISTRY }}/cafe-backend:${{ github.run_number }}
          docker tag ${{ secrets.REGISTRY }}/cafe-backend:${{ github.run_number }} ${{ secrets.REGISTRY }}/cafe-backend:latest
          docker push ${{ secrets.REGISTRY }}/cafe-backend:latest

      # Build & push frontend
      - name: Build and push frontend image
        working-directory: ./Frontend
        run: |
          docker-compose build
          docker tag frontend-app ${{ secrets.REGISTRY }}/cafe-frontend:${{ github.run_number }}
          docker push ${{ secrets.REGISTRY }}/cafe-frontend:${{ github.run_number }}
          docker tag ${{ secrets.REGISTRY }}/cafe-frontend:${{ github.run_number }} ${{ secrets.REGISTRY }}/cafe-frontend:latest
          docker push ${{ secrets.REGISTRY }}/cafe-frontend:latest

  Deploy-To-EKS:
    needs: Build-And-Push-Images
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Update kube config
        run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}

      # Deploy Backend
      - name: Deploy Backend to EKS
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          cluster-name: ${{ env.EKS_CLUSTER_NAME }}
          chart-path: ./cafemanagement/helm
          namespace: cafe-backend
          values: |
            backend.image.repository=${{ secrets.REGISTRY }}/cafe-backend
            backend.image.tag=${{ github.run_number }}
          name: cafe-backend-${{ github.run_number }}

      # Deploy Frontend
      - name: Deploy Frontend to EKS
        uses: bitovi/github-actions-deploy-eks-helm@v1.2.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          cluster-name: ${{ env.EKS_CLUSTER_NAME }}
          chart-path: ./Frontend/helm
          namespace: cafe-frontend
          values: |
            frontend.image.repository=${{ secrets.REGISTRY }}/cafe-frontend
            frontend.image.tag=${{ github.run_number }}
          name: cafe-frontend-${{ github.run_number }}